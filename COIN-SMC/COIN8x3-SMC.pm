//CODE COIN 8X3

dtmc

param int p1;
param int p2;
param int p3;
param int p4;
param int p5;
param int p6;
param int p7;
param int p8;


module One
sa1 : [0..2];
sa2 : [0..2];
sa3 : [0..2];
sa4 : [0..2];
sa5 : [0..2];
sa6 : [0..2];
sa7 : [0..2];
sa8 : [0..2];
x1 : [0..8] ;
[] sa1=0 & (x1=0) -> p1 : (sa1'=1) & (x1'=1) + 1-p1 : (sa1'=2) & (x1'=1) ;
[] sa2=0 & (x1=1) -> p2 : (sa2'=1) & (x1'=2) + 1-p2 : (sa2'=2) & (x1'=2) ;
[] sa3=0 & (x1=2) -> p3 : (sa3'=1) & (x1'=3) + 1-p3 : (sa3'=2) & (x1'=3) ;
[] sa4=0 & (x1=3) -> p4 : (sa4'=1) & (x1'=4) + 1-p4 : (sa4'=2) & (x1'=4) ;
[] sa5=0 & (x1=4) -> p5 : (sa5'=1) & (x1'=5) + 1-p5 : (sa5'=2) & (x1'=5) ;
[] sa6=0 & (x1=5) -> p6 : (sa6'=1) & (x1'=6) + 1-p6 : (sa6'=2) & (x1'=6) ;
[] sa7=0 & (x1=6) -> p7 : (sa7'=1) & (x1'=7) + 1-p7 : (sa7'=2) & (x1'=7) ;
[] sa8=0 & (x1=7) -> p8 : (sa8'=1) & (x1'=8) + 1-p8 : (sa8'=2) & (x1'=8) ;
endmodule

module two
sb1 : [0..2];
sb2 : [0..2];
sb3 : [0..2];
sb4 : [0..2];
sb5 : [0..2];
sb6 : [0..2];
sb7 : [0..2];
sb8 : [0..2];
x2 : [0..8] ;
[] sb1=0 & (x2=0) -> p1 : (sb1'=1) & (x2'=1) + 1-p1 : (sb1'=2) & (x2'=1) ;
[] sb2=0 & (x2=1) -> p2 : (sb2'=1) & (x2'=2) + 1-p2 : (sb2'=2) & (x2'=2);
[] sb3=0 & (x2=2) -> p3 : (sb3'=1) & (x2'=3) + 1-p3 : (sb3'=2) & (x2'=3);
[] sb4=0 & (x2=3) -> p4 : (sb4'=1) & (x2'=4) + 1-p4 : (sb4'=2) & (x2'=4) ;
[] sb5=0 & (x2=4) -> p5 : (sb5'=1) & (x2'=5) + 1-p5 : (sb5'=2) & (x2'=5) ;
[] sb6=0 & (x2=5) -> p6 : (sb6'=1) & (x2'=6) + 1-p6 : (sb6'=2) & (x2'=6);
[] sb7=0 & (x2=6) -> p7 : (sb7'=1) & (x2'=7) + 1-p7 : (sb7'=2) & (x2'=7) ;
[] sb8=0 & (x2=7) -> p8 : (sb8'=1) & (x2'=8) + 1-p8 : (sb8'=2) & (x2'=8) ;
endmodule

module three
sc1 : [0..2];
sc2 : [0..2];
sc3 : [0..2];
sc4 : [0..2];
sc5 : [0..2];
sc6 : [0..2];
sc7 : [0..2];
sc8 : [0..2];
x3 : [0..8] ;
[] sc1=0 & (x3=0) -> p1 : (sc1'=1) & (x3'=1) + 1-p1 : (sc1'=2) & (x3'=1) ;
[] sc2=0 & (x3=1) -> p2 : (sc2'=1) & (x3'=2) + 1-p2 : (sc2'=2) & (x3'=2);
[] sc3=0 & (x3=2) -> p3 : (sc3'=1) & (x3'=3) + 1-p3 : (sc3'=2) & (x3'=3);
[] sc4=0 & (x3=3) -> p4 : (sc4'=1) & (x3'=4) + 1-p4 : (sc4'=2) & (x3'=4) ;
[] sc5=0 & (x3=4) -> p5 : (sc5'=1) & (x3'=5) + 1-p5 : (sc5'=2) & (x3'=5) ;
[] sc6=0 & (x3=5) -> p6 : (sc6'=1) & (x3'=6) + 1-p6 : (sc6'=2) & (x3'=6);
[] sc7=0 & (x3=6) -> p7 : (sc7'=1) & (x3'=7) + 1-p7 : (sc7'=2) & (x3'=7) ;
[] sc8=0 & (x3=7) -> p8 : (sc8'=1) & (x3'=8) + 1-p8 : (sc8'=2) & (x3'=8) ;
endmodule

formula sum = sa1+sa2+sa3+sa4+sa5+sa6+sa7+sa8+sb1+sb2+sb3+sb4+sb5+sb6+sb7+sb8+sc1+sc2+sc3+sc4+sc5+sc6+sc7+sc8;

rewards

[]sum=36 & x1=8 & x2=8 & x3=8: 1;

endrewards
